steps:

- id: 'k8s-getcredentials'
  name: 'gcr.io/cloud-builders/gcloud'
  args: ['container','clusters','get-credentials','greenops-cluster','--zone','europe-north1-b','--project','greenops-demo-env']
  waitFor: ['-']



- id: 'k8s-cluster-info'
  name: gcr.io/cloud-builders/kubectl
  env:
    - CLOUDSDK_COMPUTE_ZONE=europe-north1-b
    - CLOUDSDK_CONTAINER_CLUSTER=greenops-cluster
    - KUBECONFIG=/workspace/.kube/config
  args:
    - cluster-info
  waitFor: ['k8s-getcredentials']



- id: 'make-namespace'
  name: 'gcr.io/cloud-builders/kubectl'
  env:
    - CLOUDSDK_COMPUTE_ZONE=europe-north1-b
    - CLOUDSDK_CONTAINER_CLUSTER=greenops-cluster
    - KUBECONFIG=/workspace/.kube/config
  args: ['create','namespace','test-$SHORT_SHA']
  waitFor: ['k8s-cluster-info'] 



- id: 'label-namespace'
  name: 'gcr.io/cloud-builders/kubectl'
  env:
    - CLOUDSDK_COMPUTE_ZONE=europe-north1-b
    - CLOUDSDK_CONTAINER_CLUSTER=greenops-cluster
    - KUBECONFIG=/workspace/.kube/config
  args: ['label','namespace','test-$SHORT_SHA','testonly=true']
  waitFor: ['make-namespace'] 



- id: 'patch-k8s-project'
  dir: integration-test
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args: ['-c','find k8s*.yaml -type f | xargs sed -i "s/PROJECT_ID/$PROJECT_ID/g"']
  waitFor: ['make-namespace']



- id: 'patch-k8s-shortsha'
  dir: integration-test
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args: ['-c','find k8s*.yaml -type f | xargs sed -i "s/SHORT_SHA/$SHORT_SHA/g"']
  waitFor: ['patch-k8s-project']



- id: 'deploy-to-test-namespace'
  dir: integration-test
  name: 'gcr.io/cloud-builders/kubectl'
  env:
    - CLOUDSDK_COMPUTE_ZONE=europe-north1-b
    - CLOUDSDK_CONTAINER_CLUSTER=greenops-cluster
    - KUBECONFIG=/workspace/.kube/config
  args: ['apply', '-f', 'k8s-deploy-test.yaml', '--namespace=test-$SHORT_SHA'] 
  waitFor: ['patch-k8s-shortsha']



- id: 'get-endpoint'
  dir: integration-test
  name: 'gcr.io/cloud-builders/kubectl'
  env:
    - CLOUDSDK_COMPUTE_ZONE=europe-north1-b
    - CLOUDSDK_CONTAINER_CLUSTER=greenops-cluster
    - KUBECONFIG=/workspace/.kube/config
    - SHORT_SHA=$SHORT_SHA
  entrypoint: 'bash'
  args: 
    - ./get-endpoint.sh
  waitFor: ['deploy-to-test-namespace']



- id: 'run-tests'
  dir: integration-test
  name: 'gcr.io/cloud-builders/curl'
  entrypoint: '/bin/bash'
  args:  
    - ./run-service-tests.sh
  waitFor: ['get-endpoint']



- id: 'delete-namespace'
  dir: integration-test
  name: 'gcr.io/cloud-builders/kubectl'
  env:
    - CLOUDSDK_COMPUTE_ZONE=europe-north1-b
    - CLOUDSDK_CONTAINER_CLUSTER=greenops-cluster
    - KUBECONFIG=/workspace/.kube/config
  args: ['delete','namespace','test-$SHORT_SHA']
  waitFor: ['run-tests'] 


- id: 'get-usage-results'
  dir: integration-test
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bq'
  args: 
    - query
    - --parameter commitId:STRING:$SHORT_SHA
    - < get-usage-results.sql
     
  waitFor: ['run-tests']